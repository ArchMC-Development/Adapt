import org.apache.tools.ant.taskdefs.condition.Os

plugins {
    id 'java'
    id "io.freefair.lombok" version "6.1.0"
    id "com.github.johnrengelman.shadow" version "6.0.0"
}

group 'com.volmit'
version '1.0'

// ADD YOURSELF AS A NEW LINE IF YOU WANT YOUR OWN BUILD TASK GENERATED
// ==============================================================
registerCustomOutputTaskWindows('Cyberpwn', 'C://Users/cyberpwn/Documents/development/server/plugins');
registerCustomOutputTaskWindows('Psycho', 'D://Dan/MinecraftDevelopment/Server/plugins');
registerCustomOutputTaskWindows('ArcaneArts', 'C://Users/arcane/Documents/development/server/plugins');
// ==============================================================

def registerCustomOutputTaskWindows(name, path) {
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        tasks.register('build' + name, Copy) {
            group('development')
            outputs.upToDateWhen{false}
            dependsOn ':shadowJar'
            from(file('build/libs/Adapt-' + version + '-all.jar'))
            into(file(path))
            rename { String fileName ->
                fileName.replace('Adapt-' + version + '-all.jar', "Adapt.jar")
            }
        }
    }
}

def registerCustomOutputTaskNix(name, path) {
    if (!Os.isFamily(Os.FAMILY_WINDOWS)) {
        tasks.register('build' + name, Copy) {
            group('development')
            outputs.upToDateWhen{false}
            dependsOn ':shadowJar'
            from(file('build/libs/Adapt-' + version + '-all.jar'))
            into(file(path))
            rename { String fileName ->
                fileName.replace('Adapt-' + version + '-all.jar', "Adapt.jar")
            }
        }
    }
}

/**
 * Configure Iris for shading
 */
shadowJar {
    minimize()
    append("plugin.yml")
    relocate 'io.papermc.lib', 'com.volmit.iris.util.paper'
    relocate 'net.kyori', 'com.volmit.iris.util.kyori'
    dependencies {
        include(dependency('io.papermc:paperlib'))
        include(dependency('net.kyori:'))
        include(dependency('xyz.xenondevs:'))
    }
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 60, 'minutes'
    resolutionStrategy.cacheDynamicVersionsFor 60, 'minutes'
}

repositories {
    maven { url "https://dl.cloudsmith.io/public/arcane/archive/maven/" }
    mavenLocal()
    mavenCentral()
}

dependencies {
    // Provided or Classpath
    implementation 'org.spigotmc:spigot-api:1.17.1-R0.1-SNAPSHOT'
    implementation 'org.bukkit.craftbukkit:1.17.1:1.17.1'

    // Shaded
    implementation 'io.papermc:paperlib:1.0.5'
    implementation "net.kyori:adventure-text-minimessage:4.2.0-SNAPSHOT"
    implementation "net.kyori:adventure-platform-bukkit:4.0.0"
    implementation 'net.kyori:adventure-api:4.9.3'
    implementation 'xyz.xenondevs:particle:1.6.6'

    // Dynamically Loaded
    implementation 'com.googlecode.concurrentlinkedhashmap:concurrentlinkedhashmap-lru:1.4.2'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'com.google.code.gson:gson:2.8.9'
}